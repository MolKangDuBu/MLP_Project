<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
<mapper namespace="REVIEW">
	
	<select id ="Review_getList" parameterType = "ReviewDto" resultType ="ReviewDto">
		
	 select 
	 	REVIEW_KEY
       	,REVIEW_TITLE
       	,(select USER_ID from USER B where B.USER_ID = A.REVIEW_ID)as REVIEW_ID
		,REVIEW_CONTENTS
		,REVIEW_IMAGE1
		,REVIEW_IMAGE2
		,REVIEW_IMAGE3
		,REVIEW_ADDRESS
		,REVIEW_WDATE
		,rnum
       from 
       (
          select
          	 A.REVIEW_KEY
            ,A.REVIEW_ID
            ,A.REVIEW_TITLE
            ,A.REVIEW_IMAGE1
			,A.REVIEW_IMAGE2
			,A.REVIEW_IMAGE3
			,A.REVIEW_ADDRESS
            ,A.REVIEW_CONTENTS 
            ,A.REVIEW_WDATE
             ,@rownum := @rownum+1 AS rnum
            from REVIEW_BOARD A, (select @rownum:=0) B, STORE S
            
            
         <if test='key!=null and keyword!=null'>
   
            <if test='key=="1"'>
            where REVIEW_TITLE like concat('%', #{keyword} , '%') or
                  REVIEW_CONTENTS like concat('%', #{keyword} , '%') or 
                  writer like concat('%', #{keyword} , '%') 
            </if>
            
            <if test='key=="2"'>
            where REVIEW_TITLE like like concat('%', #{keyword} , '%')
            </if>
            
            <if test='key=="3"'>
            where REVIEW_CONTENTS like concat('%', #{keyword} , '%')
            </if>
            
            <if test='key=="4"'>
            where title like concat('%', #{keyword} , '%') or
                  contents like concat('%', #{keyword} , '%') 
            </if>
            
         </if> 
         
         order by REVIEW_KEY desc
      ) A
      limit #{start}, #{pageSize} 
	</select>
	
	<select id="Review_getTotal"  parameterType = "ReviewDto" resultType ="int">
		select count(*) from REVIEW_BOARD
	</select>
	
	<insert id = "Review_insert" parameterType="ReviewDto" >
		insert into REVIEW_BOARD
		(REVIEW_TITLE, REVIEW_ADDRESS, REVIEW_CONTENTS, REVIEW_IMAGE1, REVIEW_IMAGE2, REVIEW_IMAGE3, REVIEW_WDATAE)
		values
		(#{REVIEW_TITLE}, #{REVIEW_ADDRESS}, #{REVIEW_CONTENTS}, #{REVIEW_IMAGE1}, #{REVIEW_IMAGE2}, #{REVIEW_IMAGE3}, now())
	</insert>
	
	<delete id="Review_delete" parameterType="String" >
	delete from REVIEW_BOARD where id=#{id}
	</delete>
	
	
	<update id="Review_update" parameterType="ReviewDto" >
	update REVIEW_BOARD 
		set REVIEW_TITLE = #{REVIEW_TITLE}
			,REVIEW_ADDRESS = #{REVIEW_ADDRESS}
			,REVIEW_CONTENTS = #{REVIEW_CONTENTS}
			,REVIEW_IMAGE1 = #{REVIEW_IMAGE1}
			,REVIEW_IMAGE2 = #{REVIEW_IMAGE2}
			,REVIEW_IMAGE3 = #{REVIEW_IMAGE3}		
	where  id=#{id}
	</update>
	
	<select id = "Review_getView" parameterType="String" resultType="ReviewDto">
		select
		   	 A.REVIEW_KEY
            ,A.REVIEW_ID
            ,A.REVIEW_TITLE
            ,A.REVIEW_IMAGE1
			,A.REVIEW_IMAGE2
			,A.REVIEW_IMAGE3
			,A.REVIEW_ADDRESS
            ,A.REVIEW_CONTENTS 
            ,A.REVIEW_WDATE     
           from REVIEW_BOARD A where REVIEW_ID = #{review_id}
			
	</select>
	
</mapper>